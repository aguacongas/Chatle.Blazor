@page "/login/confirm"
@inject LoginService loginService
@inject IUriHelper uriHelper

<h1>Associate your @provider account.</h1>

<form class="form-horizontal">
    <h4>Association Form</h4>
    <hr />
    <div class="text-danger">@errormessage</div>

    <p class="text-info">
        You've successfully authenticated with <strong>@provider</strong>. Please enter a user name for this site below and
        click the Register button to finish logging in.
    </p>
    <div class="form-group">
        <label class="col-md-2 control-label" for="UserName">User Name</label>
        <div class="col-md-10">
            <UserName Class="form-control" bind-Value="@UserName" ErrorChanged="@OnError"></UserName>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default" disabled="@Disabled" onclick="@Register">Register</button>
        </div>
    </div>
</form>


@functions {
    string provider;
    string errormessage;
    bool Disabled { get { return string.IsNullOrEmpty(errormessage) ? false : true; } }
    public string UserName { get; set; }

    protected override void OnInit()
    {
        provider = uriHelper.GetParameter("p");
        UserName = uriHelper.GetParameter("u");
    }

    private void OnError(string error)
    {
        errormessage = error;
    }

    async void Register()
    {
        if (Disabled)
        {
            return;
        }

        errormessage = await loginService.Register(UserName);
        StateHasChanged();
        if (errormessage == null)
        {
            uriHelper.NavigateTo("/");
        }
    }
}